{"version":3,"sources":["assets/noPoster.jpg","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Header.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","Text","props","color","Message","text","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","default","length","substring","HomePresenter","nowPlaying","upcoming","popular","error","loading","Helmet","map","movie","original_title","poster_path","vote_average","release_date","split","api","axios","create","baseURL","params","api_key","language","moviesApi","get","append_to_response","term","query","encodeURIComponent","tvApi","HomeContainer","state","a","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","original_name","isshow","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","Backdrop","bgImage","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","List","Tab","TabContent","Video","DetailPresenter","withRouter","location","pathname","result","console","log","backdrop_path","runtime","episode_run_time","genres","genre","index","name","href","imdb_id","overview","videos","videoInfo","height","width","src","frameborder","allow","allowfullscreen","production_countries","country","production_companies","company","seasons","seasonInfo","episode_count","slice","propTypes","PropTypes","object","bool","isRequired","string","DetailContainer","includes","match","push","history","parsedId","parseInt","Number","isNaN","Header","header","ul","li","current","SLink","Link","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"iIAAA,OAAe,cAA0B,sC,yOCInCA,EAAYC,IAAOC,IAAV,kFAMTC,EAAQF,IAAOG,KAAV,qEAKLC,EAAOJ,IAAOC,IAAV,0IAsBKI,GAfC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,eAACR,EAAD,WACE,cAACG,EAAD,UAAQI,IACR,cAACF,EAAD,UAAOG,QCtBLR,GAAYC,IAAOC,IAAV,sJAiBAO,GARA,kBACb,cAAC,GAAD,UACE,sBAAMC,KAAK,MAAMC,aAAW,UAA5B,yFCVEX,GAAYC,IAAOC,IAAV,0FAMTU,GAAOX,IAAOG,KAAV,gEACC,SAACS,GAAD,OAAWA,EAAMC,SAebC,GAXC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMF,EAAT,EAASA,MAAT,OACd,cAAC,GAAD,UACE,cAACF,GAAD,CAAME,MAAOA,EAAb,SAAqBE,OCZnBhB,GAAYC,IAAOC,IAAV,gDAITe,GAAQhB,IAAOC,IAAV,0MACe,SAACW,GAAD,OAAWA,EAAMK,SAQrCC,GAASlB,IAAOG,KAAV,qIAQNgB,GAAiBnB,IAAOC,IAAV,uKAIde,GAGAE,IAMAhB,GAAQF,IAAOG,KAAV,sEAKLiB,GAAOpB,IAAOG,KAAV,oFAwCKkB,GAnCA,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUjB,EAAjB,EAAiBA,MAAOkB,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,KAAhC,IAAsCC,eAAtC,gBACb,cAAC,IAAD,CAAMC,GAAID,EAAO,iBAAaJ,GAAb,gBAA6BA,GAA9C,SACE,eAAC,GAAD,WACE,eAACH,GAAD,WACE,cAACH,GAAD,CACEC,MACEM,EAAQ,yCAC8BA,GAClCK,EAAQ,IAA0BC,UAG1C,eAACX,GAAD,WACE,sBAAMT,KAAK,MAAMC,aAAW,SAA5B,oBAGCc,EAJH,YAOF,cAAC,GAAD,UACGlB,EAAMwB,OAAS,GAAf,UAAuBxB,EAAMyB,UAAU,EAAG,IAA1C,OAAqDzB,IAExD,cAACc,GAAD,UAAOK,U,SC7DP1B,GAAYC,IAAOC,IAAV,8CA6EA+B,GAzEO,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,QAASC,EAAlC,EAAkCA,MAAOC,EAAzC,EAAyCA,QAAzC,OACpB,qCACE,cAACC,GAAA,EAAD,UACE,4DAEDD,EACC,cAAC,GAAD,IAEA,eAAC,GAAD,WACE,cAACC,GAAA,EAAD,UACE,4DAEDJ,GAAYA,EAASJ,OAAS,GAC7B,cAAC,GAAD,CAASxB,MAAM,WAAf,SACG4B,EAASK,KAAI,SAACC,GAAD,aACZ,cAAC,GAAD,CACElC,MAAOkC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAI,UAAEe,EAAMI,oBAAR,aAAE,EAAoBC,MAAM,KAAK,GACrCvB,GAAIkB,EAAMlB,IACLkB,EAAMlB,SAMlBW,GAAcA,EAAWH,OAAS,GACjC,cAAC,GAAD,CAASxB,MAAM,cAAf,SACG2B,EAAWM,KAAI,SAACC,GAAD,aACd,cAAC,GAAD,CACElC,MAAOkC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAI,UAAEe,EAAMI,oBAAR,aAAE,EAAoBC,MAAM,KAAK,GACrCvB,GAAIkB,EAAMlB,IACLkB,EAAMlB,SAMlBa,GAAWA,EAAQL,OAAS,GAC3B,cAAC,GAAD,CAASxB,MAAM,UAAf,SACG6B,EAAQI,KAAI,SAACC,GAAD,aACX,cAAC,GAAD,CACElC,MAAOkC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAI,UAAEe,EAAMI,oBAAR,aAAE,EAAoBC,MAAM,KAAK,GACrCvB,GAAIkB,EAAMlB,IACLkB,EAAMlB,SAKlBc,GAAS,cAAC,GAAD,CAASvB,MAAO,MAAOE,KAAMqB,W,SCtEzCU,G,QAAMC,EAAMC,OAAO,CACvBC,QAAS,gCACTC,OAAQ,CACNC,QAAS,mCACTC,SAAU,WAIDC,GACC,kBAAMP,GAAIQ,IAAI,sBADfD,GAED,kBAAMP,GAAIQ,IAAI,mBAFbD,GAGF,kBAAMP,GAAIQ,IAAI,kBAHZD,GAIE,SAAC/B,GAAD,OACXwB,GAAIQ,IAAJ,gBAAiBhC,GAAM,CACrB4B,OAAQ,CACNK,mBAAoB,aAPfF,GAUH,SAACG,GAAD,OACNV,GAAIQ,IAAI,eAAgB,CACtBJ,OAAQ,CAENO,MAAOC,mBAAmBF,OAMrBG,GACD,kBAAMb,GAAIQ,IAAI,iBADbK,GAEF,kBAAMb,GAAIQ,IAAI,eAFZK,GAGE,kBAAMb,GAAIQ,IAAI,oBAHhBK,GAIC,SAACrC,GAAD,OAAQwB,GAAIQ,IAAJ,aAAchC,KAJvBqC,GAKH,SAACH,GAAD,OACNV,GAAIQ,IAAI,YAAa,CACnBJ,OAAQ,CACNO,MAAOC,mBAAmBF,OCpCnBI,G,4MCGbC,MAAQ,CACN5B,WAAY,KACZC,SAAU,KACVC,QAAS,KACTC,MAAO,KACPC,SAAS,G,8FAGX,sCAAAyB,EAAA,+EAIcT,KAJd,uBAGuBpB,EAHvB,EAGM8B,KAAQC,QAHd,SAOcX,KAPd,uBAMuBnB,EANvB,EAMM6B,KAAQC,QANd,UAUcX,KAVd,iBASuBlB,EATvB,EASM4B,KAAQC,QAEVC,KAAKC,SAAS,CACZjC,aACAC,WACAC,YAdN,kDAiBI8B,KAAKC,SAAS,CACZ9B,MAAO,kCAlBb,yBAqBI6B,KAAKC,SAAS,CACZ7B,SAAS,IAtBf,6E,0EA2BA,WAAU,IAAD,EACmD4B,KAAKJ,MAAvD5B,EADD,EACCA,WAAYC,EADb,EACaA,SAAUC,EADvB,EACuBA,QAASC,EADhC,EACgCA,MAAOC,EADvC,EACuCA,QAC9C,OACE,cAAC,GAAD,CACEJ,WAAYA,EACZC,SAAUA,EACVC,QAASA,EACTC,MAAOA,EACPC,QAASA,Q,GA5C0B8B,IAAMC,WCK3CrE,GAAYC,IAAOC,IAAV,8CA6EAoE,GAzEK,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAUnC,EAAb,EAAaA,QAASoC,EAAtB,EAAsBA,YAAalC,EAAnC,EAAmCA,QAASD,EAA5C,EAA4CA,MAA5C,OAClB,qCACE,cAACE,GAAA,EAAD,UACE,yDAEDD,EACC,cAAC,GAAD,IAEA,eAAC,GAAD,WACE,cAACC,GAAA,EAAD,UACE,yDAEDgC,GAAYA,EAASxC,OAAS,GAC7B,cAAC,GAAD,CAASxB,MAAM,kBAAf,SACGgE,EAAS/B,KAAI,SAACiC,GAAD,aACZ,cAAC,GAAD,CACElE,MAAOkE,EAAKC,cACZlD,SAAUiD,EAAK9B,YACfgC,QAAQ,EACRlD,OAAQgD,EAAK7B,aACblB,KAAI,UAAE+C,EAAKG,sBAAP,aAAE,EAAqB9B,MAAM,KAAK,GACtCvB,GAAIkD,EAAKlD,IACJkD,EAAKlD,SAMjBa,GAAWA,EAAQL,OAAS,GAC3B,cAAC,GAAD,CAASxB,MAAM,gBAAf,SACG6B,EAAQI,KAAI,SAACiC,GAAD,aACX,cAAC,GAAD,CACElE,MAAOkE,EAAKC,cACZlD,SAAUiD,EAAK9B,YACfgC,QAAQ,EACRlD,OAAQgD,EAAK7B,aACblB,KAAI,UAAE+C,EAAKG,sBAAP,aAAE,EAAqB9B,MAAM,KAAK,GACtCvB,GAAIkD,EAAKlD,IACJkD,EAAKlD,SAMjBiD,GAAeA,EAAYzC,OAAS,GACnC,cAAC,GAAD,CAASxB,MAAM,oBAAf,SACGiE,EAAYhC,KAAI,SAACiC,GAAD,aACf,cAAC,GAAD,CACElE,MAAOkE,EAAKC,cACZlD,SAAUiD,EAAK9B,YACfgC,QAAQ,EACRlD,OAAQgD,EAAK7B,aACblB,KAAI,UAAE+C,EAAKG,sBAAP,aAAE,EAAqB9B,MAAM,KAAK,GACtCvB,GAAIkD,EAAKlD,IACJkD,EAAKlD,SAKjBc,GAAS,cAAC,GAAD,CAASvB,MAAO,MAAOE,KAAMqB,WCtEhCwC,G,4MCGbf,MAAQ,CACNS,SAAU,KACVnC,QAAS,KACToC,YAAa,KACblC,SAAS,EACTD,MAAO,M,8FAGT,sCAAA0B,EAAA,+EAIcH,KAJd,uBAGuBW,EAHvB,EAGMP,KAAQC,QAHd,SAOcL,KAPd,uBAMuBxB,EANvB,EAMM4B,KAAQC,QANd,UAUcL,KAVd,iBASuBY,EATvB,EASMR,KAAQC,QAEVC,KAAKC,SAAS,CAAEI,WAAUnC,UAASoC,gBAXvC,kDAaIN,KAAKC,SAAS,CACZ9B,MAAO,+BAdb,yBAiBI6B,KAAKC,SAAS,CAAE7B,SAAS,IAjB7B,6E,0EAqBA,WAAU,IAAD,EACoD4B,KAAKJ,MAAxDS,EADD,EACCA,SAAUnC,EADX,EACWA,QAASoC,EADpB,EACoBA,YAAalC,EADjC,EACiCA,QAASD,EAD1C,EAC0CA,MACjD,OACE,cAAC,GAAD,CACEkC,SAAUA,EACVnC,QAASA,EACToC,YAAaA,EACblC,QAASA,EACTD,MAAOA,Q,GAtC0B+B,IAAMC,WCKzCrE,GAAYC,IAAOC,IAAV,kDAIT4E,GAAO7E,IAAO8E,KAAV,oEAKJC,GAAQ/E,IAAOgF,MAAV,+EAoFIC,GA9ES,SAAC,GAAD,IACtBC,EADsB,EACtBA,aACAC,EAFsB,EAEtBA,UACAC,EAHsB,EAGtBA,WACA/C,EAJsB,EAItBA,QACAD,EALsB,EAKtBA,MACAiD,EANsB,EAMtBA,aACAC,EAPsB,EAOtBA,WAPsB,OAStB,qCACE,cAAChD,GAAA,EAAD,UACE,4DAEF,eAAC,GAAD,WACE,cAACuC,GAAD,CAAMU,SAAUF,EAAhB,SACE,cAACN,GAAD,CACES,YAAY,gCACZC,MAAOL,EACPM,SAAUJ,MAGbjD,EACC,cAAC,GAAD,IAEA,qCACG6C,GAAgBA,EAAapD,OAAS,GACrC,cAAC,GAAD,CAASxB,MAAM,gBAAf,SACG4E,EAAa3C,KAAI,SAACC,GAAD,aAChB,cAAC,GAAD,CACElC,MAAOkC,EAAMC,eACblB,SAAUiB,EAAME,YAChBhB,SAAS,EACTF,OAAQgB,EAAMG,aACdlB,KAAI,UAAEe,EAAMI,oBAAR,aAAE,EAAoBC,MAAM,KAAK,GACrCvB,GAAIkB,EAAMlB,IACLkB,EAAMlB,SAKlB6D,GAAaA,EAAUrD,OAAS,GAC/B,cAAC,GAAD,CAASxB,MAAM,aAAf,SACG6E,EAAU5C,KAAI,SAACiC,GAAD,aACb,cAAC,GAAD,CACElE,MAAOkE,EAAKC,cACZlD,SAAUiD,EAAK9B,YACfgC,QAAQ,EACRlD,OAAQgD,EAAK7B,aACblB,KAAI,UAAE+C,EAAKG,sBAAP,aAAE,EAAqB9B,MAAM,KAAK,GACtCvB,GAAIkD,EAAKlD,IACJkD,EAAKlD,SAKjBc,GAAS,cAAC,GAAD,CAASvB,MAAO,MAAOE,KAAMqB,IACtC+C,GACCD,GACqB,IAArBC,EAAUrD,QACc,IAAxBoD,EAAapD,QACX,cAAC,GAAD,CAASjB,MAAO,aAAcE,KAAM,4BClFnC4E,G,4MCIb9B,MAAQ,CACNqB,aAAc,KACdC,UAAW,KACXC,WAAY,GACZ/C,SAAS,EACTD,MAAO,M,EAITiD,aAAe,SAACO,GACdA,EAAMC,iBAGa,KADI,EAAKhC,MAApBuB,YAEN,EAAKU,gB,EAGTR,WAAa,YAA4B,IAAfG,EAAc,EAAxBM,OAAUN,MACxB,EAAKvB,SAAS,CAAEkB,WAAYK,K,EAG9BK,a,sBAAe,oCAAAhC,EAAA,6DACLsB,EAAe,EAAKvB,MAApBuB,WACR,EAAKlB,SAAS,CAAE7B,SAAS,IAFZ,kBAMDgB,GAAiB+B,GANhB,uBAKQF,EALR,EAKTnB,KAAQC,QALC,SASDL,GAAayB,GATZ,gBAQQD,EARR,EAQTpB,KAAQC,QAEV,EAAKE,SAAS,CACZgB,eACAC,cAZS,kDAeX,EAAKjB,SAAS,CAAE9B,MAAO,wBAfZ,yBAiBX,EAAK8B,SAAS,CAAE7B,SAAS,IAjBd,6E,4CAqBf,WAAU,IAAD,EACyD4B,KAAKJ,MAA7DqB,EADD,EACCA,aAAcC,EADf,EACeA,UAAWC,EAD1B,EAC0BA,WAAY/C,EADtC,EACsCA,QAASD,EAD/C,EAC+CA,MACtD,OACE,cAAC,GAAD,CACE8C,aAAcA,EACdC,UAAWA,EACXC,WAAYA,EACZ/C,QAASA,EACTD,MAAOA,EACPiD,aAAcpB,KAAKoB,aACnBC,WAAYrB,KAAKqB,iB,GArDInB,IAAMC,W,4BCE7BrE,GAAYC,IAAOC,IAAV,uGAOT+F,GAAWhG,IAAOC,IAAV,mPAMY,SAACW,GAAD,OAAWA,EAAMqF,WAOrCC,GAAUlG,IAAOC,IAAV,qHAQPkG,GAAQnG,IAAOC,IAAV,6JAEe,SAACW,GAAD,OAAWA,EAAMqF,WAMrCG,GAAOpG,IAAOC,IAAV,iEAKJC,GAAQF,IAAOqG,GAAV,wEAKLC,GAAgBtG,IAAOC,IAAV,iEAKbsG,GAAOvG,IAAOC,IAAV,0BAEJuG,GAAUxG,IAAOG,KAAV,+CAIPsG,GAAWzG,IAAO0G,EAAV,+HAQRC,GAAO3G,YAAO,KAAPA,CAAH,yEAKJ4G,GAAM5G,YAAO,MAAPA,CAAH,6FAMH6G,GAAa7G,YAAO,MAAPA,CAAH,4FAMV8G,GAAQ9G,YAAO,SAAPA,CAAH,iDAILgB,GAAQhB,IAAOC,IAAV,kPACe,SAACW,GAAD,OAAWA,EAAMK,SAUrC8F,GAAkBC,aACtB,cAAGC,SAAYC,SAAf,IAA2BC,EAA3B,EAA2BA,OAAQ9E,EAAnC,EAAmCA,QAAgBX,GAAnD,EAA4CU,MAA5C,EAAmDV,SAAnD,OACEW,EACE,qCACE,cAACC,GAAA,EAAD,UACE,6DAEF,cAAC,GAAD,OAGF,qCACG8E,QAAQC,IAAIF,GACb,eAAC,GAAD,WACE,cAAC7E,GAAA,EAAD,UACE,kCACG6E,EAAO1E,gBAAkB0E,EAAO1C,cADnC,uBAIF,cAACuB,GAAD,CACEC,QAAO,6CAAwCkB,EAAOG,iBAExD,eAACpB,GAAD,WACE,cAACC,GAAD,CACEF,QACEkB,EAAOzE,YAAP,6CAC0CyE,EAAOzE,aAC7Cd,EAAQ,MAGhB,eAACwE,GAAD,WACE,cAAC,GAAD,UACGe,EAAO1E,eACJ0E,EAAO1E,eACP0E,EAAO1C,gBAEb,eAAC6B,GAAD,WACE,cAACC,GAAD,UACGY,EAAOvE,aACJuE,EAAOvE,aAAaC,MAAM,KAAK,GAC/BsE,EAAOxC,eAAe9B,MAAM,KAAK,KAEvC,cAAC2D,GAAD,gBACA,eAACD,GAAD,WACGY,EAAOI,QAAUJ,EAAOI,QAAUJ,EAAOK,iBAAiB,GAAI,IADjE,SAIA,cAAChB,GAAD,gBACA,cAACD,GAAD,UACGY,EAAOM,QACNN,EAAOM,OAAOlF,KAAI,SAACmF,EAAOC,GAAR,OAChBA,IAAUR,EAAOM,OAAO3F,OAAS,EAC7B4F,EAAME,KADV,UAEOF,EAAME,KAFb,YAKLlG,EACC,qCACE,cAAC8E,GAAD,gBACA,cAACD,GAAD,UACE,mBAAGsB,KAAI,qCAAgCV,EAAOW,QAAvC,KAAP,4BAMJ,MAGJ,cAACrB,GAAD,UAAWU,EAAOY,WAClB,eAACpB,GAAD,WACE,cAACC,GAAD,qBACCO,EAAOa,OACNb,EAAOa,OAAOhE,QAAQzB,KAAI,SAAC0F,GAAD,OACxB,cAACnB,GAAD,CACEoB,OAAO,MACPC,MAAM,MACNC,IAAG,wCAAmCH,EAAU3G,IAChDhB,MAAM,uBACN+H,YAAY,IACZC,MAAM,2FACNC,iBAAe,OAInB,cAAC1B,GAAD,6BAEF,cAACD,GAAD,yBACA,eAACA,GAAD,WACE,eAACC,GAAD,sBAEGM,EAAOqB,qBAAqBjG,KAAI,SAACkG,GAAD,OAAaA,EAAQb,WAExD,eAACf,GAAD,sBAEGM,EAAOuB,qBAAqBnG,KAAI,SAACoG,EAAShB,GACzC,OAAIA,IAAUR,EAAOuB,qBAAqB5G,OAAS,EAC3C,IAAN,OAAW6G,EAAQf,MAEb,IAAN,OAAWe,EAAQf,KAAnB,gBAKPlG,EACC,GAEA,eAACkF,GAAD,qBAEGO,EAAOyB,QACNzB,EAAOyB,QAAQrG,KAAI,SAACsG,GAAD,OACjB,qCACE,eAAChC,GAAD,WACGgC,EAAWjB,KADd,eAEGiB,EAAWC,iBAEd,cAAC,GAAD,CACE7H,MACE4H,EAAWnG,YAAX,yCACsCmG,EAAWnG,aAC7Cd,EAAQ,IAA6BC,UAG7C,cAAC4E,GAAD,UACGoC,EAAWd,SAASgB,MAAM,EAAG,KAAO,gBAK3C,cAAClC,GAAD,+BAEF,cAACA,GAAD,yBAWpBE,GAAgBiC,UAAY,CAC1B7B,OAAQ8B,KAAUC,OAClB7G,QAAS4G,KAAUE,KAAKC,WACxBhH,MAAO6G,KAAUI,QAGJtC,I,eAAAA,MCzPAuC,G,kDCGb,WAAY1I,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAIHsG,EACVtG,EADFqG,SAAYC,SAJG,OAOjB,EAAKrD,MAAQ,CACXsD,OAAQ,KACR/E,MAAO,KACPC,SAAS,EACTX,QAASwF,EAASqC,SAAS,YAXZ,E,4FAenB,0CAAAzF,EAAA,2DAMMG,KAAKrD,MAHKU,EAHhB,EAEIkI,MACEtG,OAAU5B,GAEDmI,EALf,EAKIC,QAAWD,KAGPE,EAAWC,SAAStI,GAClBI,EAAYuC,KAAKJ,MAAjBnC,SAEJmI,OAAOC,MAAMH,GAXnB,uBAYIF,EAAK,KAZT,uCAkBQ/H,EAlBR,kCAmBgC2B,GAAsBsG,GAnBtD,iBAmBexC,EAnBf,EAmBSpD,KAnBT,yCAqBgCJ,GAAiBgG,GArBjD,iBAqBexC,EArBf,EAqBSpD,KArBT,0DAwBIE,KAAKC,SAAS,CAAE9B,MAAO,wBAxB3B,yBA0BI6B,KAAKC,SAAS,CAAE7B,SAAS,EAAO8E,WA1BpC,6E,0EA8BA,WACE,OAAO,cAAC,GAAD,gBAAqBlD,KAAKJ,Y,GA/CQM,IAAMC,WCC7C2F,GAAS/J,IAAOgK,OAAV,oRAcNrD,GAAO3G,IAAOiK,GAAV,gDAIJ1D,GAAOvG,IAAOkK,GAAV,sKAImB,SAACtJ,GAAD,OAAYA,EAAMuJ,QAAU,OAAS,iBAI5DC,GAAQpK,YAAOqK,IAAPrK,CAAH,qHAOIgH,gBAAW,gBAAeE,EAAf,EAAGD,SAAYC,SAAf,OACxB,cAAC6C,GAAD,UACE,eAAC,GAAD,WACE,cAAC,GAAD,CAAMI,QAAsB,MAAbjD,EAAf,SACE,cAACkD,GAAD,CAAOzI,GAAG,IAAV,sBAEF,cAAC,GAAD,CAAMwI,QAAsB,QAAbjD,EAAf,SACE,cAACkD,GAAD,CAAOzI,GAAG,MAAV,kBAEF,cAAC,GAAD,CAAMwI,QAAsB,YAAbjD,EAAf,SACE,cAACkD,GAAD,CAAOzI,GAAG,UAAV,8BClCO,cACb,OACE,cAAC,IAAD,UACE,qCACE,cAAC,GAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2I,KAAK,IAAIC,OAAK,EAACC,UAAWC,KACjC,cAAC,IAAD,CAAOH,KAAK,MAAMC,OAAK,EAACC,UAAWE,KACnC,cAAC,IAAD,CAAOJ,KAAK,UAAUC,OAAK,EAACC,UAAWG,KACvC,cAAC,IAAD,CAAOL,KAAK,aAAaC,OAAK,EAACC,UAAWI,KAC1C,cAAC,IAAD,CAAON,KAAK,YAAYC,OAAK,EAACC,UAAWI,KACzC,cAAC,IAAD,CAAUC,KAAK,IAAIlJ,GAAG,e,SCJjBmJ,GAlBMC,YAAH,ybACZC,MCYSC,G,4JAVb,WACE,OACE,qCACE,cAACC,GAAD,IACA,cAACC,GAAD,W,GALU/G,aCDlBgH,IAASC,OAAO,cAAC,GAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.9cea6b26.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/noPoster.6373b90a.jpg\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 800;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 25px;\r\n`;\r\n\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\n\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  font-size: 50px;\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst Loader = () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      (☞ﾟヮﾟ)☞ ⏰ ☜(ﾟヮﾟ☜)\r\n    </span>\r\n  </Container>\r\n);\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n  font-weight: 800;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPoster.jpg\").default\r\n          }\r\n        ></Image>\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐\r\n          </span>\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, upcoming, popular, error, loading }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Movies | NetflixClone</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader></Loader>\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>Movies | NetflixClone</title>\r\n        </Helmet>\r\n        {upcoming && upcoming.length > 0 && (\r\n          <Section title=\"Upcoming\">\r\n            {upcoming.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.split(\"-\")[0]}\r\n                id={movie.id}\r\n                key={movie.id}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {nowPlaying && nowPlaying.length > 0 && (\r\n          <Section title=\"Now Playing\">\r\n            {nowPlaying.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.split(\"-\")[0]}\r\n                id={movie.id}\r\n                key={movie.id}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular\">\r\n            {popular.map((movie) => (\r\n              <Poster\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date?.split(\"-\")[0]}\r\n                id={movie.id}\r\n                key={movie.id}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color={\"red\"} text={error}></Message>}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: {\r\n    api_key: \"3220f21e47037404efe3abc9f1bda550\",\r\n    language: \"en-US\",\r\n  },\r\n});\r\n\r\nexport const moviesApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: (id) =>\r\n    api.get(`movie/${id}`, {\r\n      params: {\r\n        append_to_response: \"videos\",\r\n      },\r\n    }),\r\n  search: (term) =>\r\n    api.get(\"search/movie\", {\r\n      params: {\r\n        // 특수문자를 처리할 때 encode 필요\r\n        query: encodeURIComponent(term),\r\n        // TODO: 현재는 axios에서 알아서 encode해주는 듯. 한글 검색할 때 이렇게 하면 이슈가 있다고 함\r\n      },\r\n    }),\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  showDetail: (id) => api.get(`tv/${id}`),\r\n  search: (term) =>\r\n    api.get(\"search/tv\", {\r\n      params: {\r\n        query: encodeURIComponent(term),\r\n      },\r\n    }),\r\n};\r\n","import HomeContainer from \"./HomeContainer\";\r\n\r\nexport default HomeContainer;\r\n","import React from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport { moviesApi } from \"api\";\r\n\r\nexport default class HomeContainer extends React.Component {\r\n  state = {\r\n    nowPlaying: null,\r\n    upcoming: null,\r\n    popular: null,\r\n    error: null,\r\n    loading: true,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: nowPlaying },\r\n      } = await moviesApi.nowPlaying();\r\n      const {\r\n        data: { results: upcoming },\r\n      } = await moviesApi.upcoming();\r\n      const {\r\n        data: { results: popular },\r\n      } = await moviesApi.popular();\r\n      this.setState({\r\n        nowPlaying,\r\n        upcoming,\r\n        popular,\r\n      });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find movie information.\",\r\n      });\r\n    } finally {\r\n      this.setState({\r\n        loading: false,\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n    return (\r\n      <HomePresenter\r\n        nowPlaying={nowPlaying}\r\n        upcoming={upcoming}\r\n        popular={popular}\r\n        error={error}\r\n        loading={loading}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"Components/Section\";\r\nimport Loader from \"Components/Loader\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\r\n  <>\r\n    <Helmet>\r\n      <title>TVs | NetflixClone</title>\r\n    </Helmet>\r\n    {loading ? (\r\n      <Loader></Loader>\r\n    ) : (\r\n      <Container>\r\n        <Helmet>\r\n          <title>TVs | NetflixClone</title>\r\n        </Helmet>\r\n        {topRated && topRated.length > 0 && (\r\n          <Section title=\"Top Rated Shows\">\r\n            {topRated.map((show) => (\r\n              <Poster\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                isshow={true}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.split(\"-\")[0]}\r\n                id={show.id}\r\n                key={show.id}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {popular && popular.length > 0 && (\r\n          <Section title=\"Popular Shows\">\r\n            {popular.map((show) => (\r\n              <Poster\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                isshow={true}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.split(\"-\")[0]}\r\n                id={show.id}\r\n                key={show.id}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n\r\n        {airingToday && airingToday.length > 0 && (\r\n          <Section title=\"AiringToday Shows\">\r\n            {airingToday.map((show) => (\r\n              <Poster\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                isshow={true}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date?.split(\"-\")[0]}\r\n                id={show.id}\r\n                key={show.id}\r\n              ></Poster>\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {error && <Message color={\"red\"} text={error}></Message>}\r\n      </Container>\r\n    )}\r\n  </>\r\n);\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from \"./TVContainer\";\r\n\r\nexport default TVContainer;\r\n","import { tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport TVPresenter from \"./TVPresenter\";\r\n\r\nexport default class TVContainer extends React.Component {\r\n  state = {\r\n    topRated: null,\r\n    popular: null,\r\n    airingToday: null,\r\n    loading: true,\r\n    error: null,\r\n  };\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const {\r\n        data: { results: topRated },\r\n      } = await tvApi.topRated();\r\n      const {\r\n        data: { results: popular },\r\n      } = await tvApi.popular();\r\n      const {\r\n        data: { results: airingToday },\r\n      } = await tvApi.airingToday();\r\n      this.setState({ topRated, popular, airingToday });\r\n    } catch {\r\n      this.setState({\r\n        error: \"Can't find TV information.\",\r\n      });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { topRated, popular, airingToday, loading, error } = this.state;\r\n    return (\r\n      <TVPresenter\r\n        topRated={topRated}\r\n        popular={popular}\r\n        airingToday={airingToday}\r\n        loading={loading}\r\n        error={error}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Section from \"Components/Section\";\r\nimport Message from \"Components/Message\";\r\nimport Poster from \"Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  searchTerm,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  updateTerm,\r\n}) => (\r\n  <>\r\n    <Helmet>\r\n      <title>Search | NetflixClone</title>\r\n    </Helmet>\r\n    <Container>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Shows ...\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        ></Input>\r\n      </Form>\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  title={movie.original_title}\r\n                  imageUrl={movie.poster_path}\r\n                  isMovie={true}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date?.split(\"-\")[0]}\r\n                  id={movie.id}\r\n                  key={movie.id}\r\n                ></Poster>\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"TV Results\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  title={show.original_name}\r\n                  imageUrl={show.poster_path}\r\n                  isshow={true}\r\n                  rating={show.vote_average}\r\n                  year={show.first_air_date?.split(\"-\")[0]}\r\n                  id={show.id}\r\n                  key={show.id}\r\n                ></Poster>\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color={\"red\"} text={error}></Message>}\r\n          {tvResults &&\r\n            movieResults &&\r\n            tvResults.length === 0 &&\r\n            movieResults.length === 0 && (\r\n              <Message color={\"light-gray\"} text={\"Nothing Found\"}></Message>\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  </>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  searchTerm: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from \"./SearchContainer\";\r\n\r\nexport default SearchContainer;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\n\r\nexport default class extends React.Component {\r\n  state = {\r\n    movieResults: null,\r\n    tvResults: null,\r\n    searchTerm: \"\",\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  // 텍스트를 입력하고 엔터를 누를 때\r\n  handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    const { searchTerm } = this.state;\r\n    if (searchTerm !== \"\") {\r\n      this.searchByTerm();\r\n    }\r\n  };\r\n  updateTerm = ({ target: { value } }) => {\r\n    this.setState({ searchTerm: value });\r\n  };\r\n\r\n  searchByTerm = async () => {\r\n    const { searchTerm } = this.state;\r\n    this.setState({ loading: true });\r\n    try {\r\n      const {\r\n        data: { results: movieResults },\r\n      } = await moviesApi.search(searchTerm);\r\n      const {\r\n        data: { results: tvResults },\r\n      } = await tvApi.search(searchTerm);\r\n      this.setState({\r\n        movieResults,\r\n        tvResults,\r\n      });\r\n    } catch {\r\n      this.setState({ error: \"Can't find results.\" });\r\n    } finally {\r\n      this.setState({ loading: false });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { movieResults, tvResults, searchTerm, loading, error } = this.state;\r\n    return (\r\n      <SearchPresenter\r\n        movieResults={movieResults}\r\n        tvResults={tvResults}\r\n        searchTerm={searchTerm}\r\n        loading={loading}\r\n        error={error}\r\n        handleSubmit={this.handleSubmit}\r\n        updateTerm={this.updateTerm}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  background-image: url(${(props) => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  height: 100%;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  margin: 20px 0;\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.div``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7px;\r\n  line-height: 1.5;\r\n  width: 80%;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst List = styled(\"ul\")`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst Tab = styled(\"div\")`\r\n  margin-top: 10px;\r\n  font-size: 20px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst TabContent = styled(\"div\")`\r\n  margin-bottom: 5px;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Video = styled(\"iframe\")`\r\n  margin-top: 10px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  width: 200px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst DetailPresenter = withRouter(\r\n  ({ location: { pathname }, result, loading, error, isMovie }) =>\r\n    loading ? (\r\n      <>\r\n        <Helmet>\r\n          <title>Loading | NetflixClone</title>\r\n        </Helmet>\r\n        <Loader></Loader>\r\n      </>\r\n    ) : (\r\n      <>\r\n        {console.log(result)}\r\n        <Container>\r\n          <Helmet>\r\n            <title>\r\n              {result.original_title || result.original_name} | NetflixClone\r\n            </title>\r\n          </Helmet>\r\n          <Backdrop\r\n            bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n          ></Backdrop>\r\n          <Content>\r\n            <Cover\r\n              bgImage={\r\n                result.poster_path\r\n                  ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n                  : require(\"../../assets/noPoster.jpg\")\r\n              }\r\n            ></Cover>\r\n            <Data>\r\n              <Title>\r\n                {result.original_title\r\n                  ? result.original_title\r\n                  : result.original_name}\r\n              </Title>\r\n              <ItemContainer>\r\n                <Item>\r\n                  {result.release_date\r\n                    ? result.release_date.split(\"-\")[0]\r\n                    : result.first_air_date.split(\"-\")[0]}\r\n                </Item>\r\n                <Divider>|</Divider>\r\n                <Item>\r\n                  {result.runtime ? result.runtime : result.episode_run_time[0]}{\" \"}\r\n                  min\r\n                </Item>\r\n                <Divider>|</Divider>\r\n                <Item>\r\n                  {result.genres &&\r\n                    result.genres.map((genre, index) =>\r\n                      index === result.genres.length - 1\r\n                        ? genre.name\r\n                        : `${genre.name} / `\r\n                    )}\r\n                </Item>\r\n                {isMovie ? (\r\n                  <>\r\n                    <Divider>|</Divider>\r\n                    <Item>\r\n                      <a href={`https://www.imdb.com/title/${result.imdb_id}/`}>\r\n                        IMDB LINK\r\n                      </a>\r\n                    </Item>\r\n                  </>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </ItemContainer>\r\n              <Overview>{result.overview}</Overview>\r\n              <List>\r\n                <Tab>VIDEOS</Tab>\r\n                {result.videos ? (\r\n                  result.videos.results.map((videoInfo) => (\r\n                    <Video\r\n                      height=\"150\"\r\n                      width=\"300\"\r\n                      src={`https://www.youtube.com/embed/${videoInfo.id}`}\r\n                      title=\"YouTube video player\"\r\n                      frameborder=\"0\"\r\n                      allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n                      allowfullscreen\r\n                    ></Video>\r\n                  ))\r\n                ) : (\r\n                  <TabContent>\"NO VIDEOS...\"</TabContent>\r\n                )}\r\n                <Tab>PRODUCTION</Tab>\r\n                <Tab>\r\n                  <TabContent>\r\n                    COUNTRY:\r\n                    {result.production_countries.map((country) => country.name)}\r\n                  </TabContent>\r\n                  <TabContent>\r\n                    COMPANY:\r\n                    {result.production_companies.map((company, index) => {\r\n                      if (index === result.production_companies.length - 1) {\r\n                        return ` ${company.name}`;\r\n                      } else {\r\n                        return ` ${company.name} | `;\r\n                      }\r\n                    })}\r\n                  </TabContent>\r\n                </Tab>\r\n                {isMovie ? (\r\n                  \"\"\r\n                ) : (\r\n                  <Tab>\r\n                    Seasons\r\n                    {result.seasons ? (\r\n                      result.seasons.map((seasonInfo) => (\r\n                        <>\r\n                          <TabContent>\r\n                            {seasonInfo.name} | Total Ep:\r\n                            {seasonInfo.episode_count}\r\n                          </TabContent>\r\n                          <Image\r\n                            bgUrl={\r\n                              seasonInfo.poster_path\r\n                                ? `https://image.tmdb.org/t/p/w300${seasonInfo.poster_path}`\r\n                                : require(\"../../assets/noPoster.jpg\").default\r\n                            }\r\n                          ></Image>\r\n                          <Overview>\r\n                            {seasonInfo.overview.slice(0, 200) + \" ... \"}\r\n                          </Overview>\r\n                        </>\r\n                      ))\r\n                    ) : (\r\n                      <TabContent>\"NO SEASONS ...\"</TabContent>\r\n                    )}\r\n                    <TabContent></TabContent>\r\n                  </Tab>\r\n                )}\r\n              </List>\r\n            </Data>\r\n          </Content>\r\n        </Container>\r\n      </>\r\n    )\r\n);\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from \"./DetailContainer\";\r\n\r\nexport default DetailContainer;\r\n","import { moviesApi, tvApi } from \"api\";\r\nimport React from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\n\r\nexport default class DetailContainer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const {\r\n      location: { pathname },\r\n    } = props;\r\n\r\n    this.state = {\r\n      result: null,\r\n      error: null,\r\n      loading: true,\r\n      isMovie: pathname.includes(\"/movie/\"),\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const {\r\n      match: {\r\n        params: { id },\r\n      },\r\n      history: { push },\r\n    } = this.props;\r\n\r\n    const parsedId = parseInt(id);\r\n    const { isMovie } = this.state;\r\n\r\n    if (Number.isNaN(parsedId)) {\r\n      push(\"/\");\r\n      return;\r\n    }\r\n\r\n    let result;\r\n    try {\r\n      if (isMovie) {\r\n        ({ data: result } = await moviesApi.movieDetail(parsedId));\r\n      } else {\r\n        ({ data: result } = await tvApi.showDetail(parsedId));\r\n      }\r\n    } catch {\r\n      this.setState({ error: \"Can't find anything\" });\r\n    } finally {\r\n      this.setState({ loading: false, result });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return <DetailPresenter {...this.state} />;\r\n  }\r\n}\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  background-color: rgba(20, 20, 20, 0.8);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid ${(props) => (props.current ? \"blue\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <SLink to=\"/\">Movies</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/tv\"}>\r\n        <SLink to=\"/tv\">TV</SLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <SLink to=\"/search\">Search</SLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nimport React from \"react\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Redirect,\r\n  Route,\r\n  Switch,\r\n} from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport TV from \"Routes/TV\";\r\nimport Search from \"Routes/Search\";\r\nimport Detail from \"Routes/Detail\";\r\nimport Header from \"Components/Header\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Router>\r\n      <>\r\n        <Header></Header>\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/tv\" exact component={TV} />\r\n          <Route path=\"/search\" exact component={Search} />\r\n          <Route path=\"/movie/:id\" exact component={Detail} />\r\n          <Route path=\"/show/:id\" exact component={Detail} />\r\n          <Redirect from=\"*\" to=\"/\"></Redirect>\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n};\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:12px;\r\n        background-color:rgba(20, 20, 20, 1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React, { Component } from \"react\";\r\n\r\nimport RouterComponent from \"Components/Router\";\r\nimport GlobalStyles from \"Components/GlobalStyles\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <RouterComponent />\r\n        <GlobalStyles></GlobalStyles>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"Components/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}